EC2
Sign in 
Select service > compute > EC2
Select launch instance
Add details to instance such as name and tag
Add OS and select instance type
Select a key pair, ir create a new key pair by selecting the type and tha file format for the same.
One can modify the network settings for the instance.
Click on launch instance 
Goto connect to instance 
Launch putty
Paste the public DNS link in the session section
Select connection type to ssh
In the category pane, go to Connection -> SSH -> Auth -> Enter the authentication parameters and select the putty private key (.ppk file downloaded when creating the key pair)
Also save the setting by going in the Session Section and entering in a name in the Saved Sessions box, and click save
Click Open in Putty Configuration to connect to the instance. Ec2 instance window will appear.
In the putty session, perform the following commands (Logged in as user: ubuntu)
a. Sudo apt update
b. Sudo apt-get install apache2
c. Sudo apt install mysql-server
d. Sudo apt-get install php libapache2-mod-php
e. Sudo service apache2 restart
f. Start mysql with “sudo mysql”. This step checks if mysql is working or not
g. Configure the Security group inbound rules to allow traffic on HTTP
h. Grant permissions to AWS EC2 user as:
Sudo chown –R ubuntu:ubuntu /var/www/html
Sudo chmod –R 755 /var/www/html
Open filezilla and enter the public IP address of the EC2 instance in filezilla. Click OK
Go to the Edit section in Taskbar -> Settings -> SFTP-> Add key file
Select the connection created in the site manager
After connection is established. Go to the folder /var/www/html in the instance.
Copy the public IP address in the browser and check the html file.
Edit the index.html as one deems fit
Check the public IP address again in the browser and verify if the changes were made or not

—------------------------------------------------------
KVM
Check if your system can use KVM acceleration by typing: sudo kvm-ok
If kvm-ok returns an error stating KVM acceleration cannot be used, try solving the problem by installing a cpu-checker.
To install cpu-checker, run the following command: sudo apt install cpu-checker
Install KVM packages: sudo apt install qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils
Authorize users: sudo adduser ‘kccs’ libvirt
Sudo adduser ‘kccs’ kvm
Verify: virsh list –all
If the virtualization daemon is not active, activate it with the following command: sudo systemctl enable --now libvirtd
Before you choose one of the two methods listed below, install virt-manager, a tool for creating and managing VMs: sudo apt install virt-manager
Start virt-manager with: sudo virt-manager

—----------------------------------------------
S3
Sign into the AWS account and go to S3 in Services.
Click on Create Bucket and add some unique name to the bucket
Keep ACL enabled in the Object Ownership section.
Select “Block all public access” option
Remaining all configurations to be kept the same. Click on “Create Bucket at the end”
Go to buckets in the S3 Section, Select the recently created bucket
Click on upload option
In the properties section, set the Storage class as standard.
Click on Upload, and verify the same
Go to the s3 bucket, click on permissions -> ACL and turn on Read option for everyone. Save the changes
Also go to the object uploaded in the bucket, and edit the permissions as follows
Now paste the object url in the browser and check the object that is uploaded


—---------------------------------------------
Identity Management
1. Create IAM users: Create IAM users for organization/company/institution, and assign them unique credentials (username and password or access keys) to access the AWS resources.

2. Create IAM groups: Create groups, and add users to those groups, to manage permissions on a group level.

3. Create IAM roles: Can create roles, and assign permissions to those roles, to grant permissions to AWS services, applications, or external identity providers.

4. Create IAM policies: Create policies to grant specific permissions to users, groups, or roles.

5. Assign policies to users, groups, or roles: Assign policies to users, groups, or roles, to grant them permissions to access specific resources.

6. Monitor and Audit: Use AWS CloudTrail to track user activity and also keep track of user access and permissions regularly.

7. Multi-Factor Authentication (MFA): To increase security, enable MFA on the IAM users, this will require the user to provide not only the password but also a time-based one-time code generated by an MFA device.

8. Access control for AWS resources, use IAM policies to manage access to AWS resources, such as Amazon S3 buckets, Amazon SQS queues, and Amazon SNS topics.


—-------------------------------------------------------
Study Cloud Security Management
To study Cloud Security management in AWS, familiarize with the AWS Security Best Practices, which provides comprehensive guidelines on securing your AWS infrastructure and data.
Additionally, explore the different security services offered by AWS that can help you to secure your environment such as:
1. AWS Identity and Access Management (IAM) - Allows to manage and control access to AWS
resources by creating and managing users and groups, and setting up permissions and
policies.
2. Amazon Virtual Private Cloud (VPC) - Allows to create isolated networks within the AWS
cloud, and control inbound and outbound traffic to your resources.
3. AWS Key Management Service (KMS) - Allows to create and manage encryption keys for
securing data at rest and in transit.
4. AWS Certificate Manager - Allows to manage SSL/TLS certificates for securing web-based
communication and applications.
5. AWS Web Application Firewall (WAF) - Allows to protect your web applications from
common web exploits and DDoS attacks.



—----------------------------------------------------
Write a program for web feed

Start Xampp server
Write the program for Web feed in a php file:
<?php

$feed = new SimpleXMLElement('<rss></rss>');

$feed->addAttribute('version', '2.0');

$channel = $feed->addChild('channel');

$channel->addChild('title', 'My Blog');

$channel->addChild('link', 'https://www.example.com/blog');

$channel->addChild('description', 'Updates on my latest blog posts');

// add entries to the feed

$entries = array(

array(

'title' => 'My First Post',

'link' => 'https://www.example.com/blog/my-first-post',

'description' => 'This is the description of my first post',

'pubDate' => 'Sat, 01 Jan 2022 00:00:00 +0000'

),

array(

'title' => 'My Second Post',

'link' => 'https://www.example.com/blog/my-second-post',

'description' => 'This is the description of my second post',

'pubDate' => 'Sun, 02 Jan 2022 00:00:00 +0000'

)

);

foreach ($entries as $entry) {

$item = $channel->addChild('item');

$item->addChild('title', $entry['title']);

$item->addChild('link', $entry['link']);

$item->addChild('description', $entry['description']);

$item->addChild('pubDate', $entry['pubDate']);

}

// output the RSS feed

header('Content-Type: application/rss+xml');

echo $feed->asXML();
Check the program in the browser





—-----------------------------------------
Study and implementation of identity management
Log in to AWS account as root user
Go to the IAM section in Services’
Go to the users section in the left pane and select add user
Add the user details such as the username and the access type.
Attach an existing policy to the user. One can also add the user to an existing group or a new group.
Review the user policies and add tags if necessary
Click on “Create User” and verify if the user was created. Upon successful creation, one can share the console sign in url to the IAM user for login, and also download the CSV file for the credentials of the newly created user.
Review list of users to check the user was added to the list.


—-------------------
Lambda
Go to AWS Lambda
Create function
Use a blueprint. Give name, Defualt params all the way
On Dashboard.
Add TRigger
Select S3. Sele the s3, and acknowledge
Add Destination
Async activty on success, SNS TOpic,. Add the snscreated below.
Befor creating, Create the SNS Service. Add name, add topic.
Create topic, add topic ARN, select mail. Add email id.
Create subscrption and confimthe subsrciption on mail.
Upload file on s3 and check mail for notification




